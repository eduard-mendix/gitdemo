// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package workflowessentialspublic.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;

public class Microflows
{
	// These are the microflows for the WorkflowEssentialsPublic module
	public static void aCT_UserTask_AssignToMe(IContext context, system.proxies.WorkflowUserTask _userTask)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("UserTask", _userTask == null ? null : _userTask.getMendixObject());
		Core.microflowCall("WorkflowEssentialsPublic.ACT_UserTask_AssignToMe").withParams(params).execute(context);
	}
	public static void aCT_UserTask_AssignToUser(IContext context, system.proxies.WorkflowUserTask _userTask, system.proxies.User _user)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("UserTask", _userTask == null ? null : _userTask.getMendixObject());
		params.put("User", _user == null ? null : _user.getMendixObject());
		Core.microflowCall("WorkflowEssentialsPublic.ACT_UserTask_AssignToUser").withParams(params).execute(context);
	}
	public static void aCT_UserTask_Unassign(IContext context, system.proxies.WorkflowUserTask _userTask)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("UserTask", _userTask == null ? null : _userTask.getMendixObject());
		Core.microflowCall("WorkflowEssentialsPublic.ACT_UserTask_Unassign").withParams(params).execute(context);
	}
	public static void aCT_Workflow_Abort(IContext context, system.proxies.WorkflowInstance _workflow)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Workflow", _workflow == null ? null : _workflow.getMendixObject());
		Core.microflowCall("WorkflowEssentialsPublic.ACT_Workflow_Abort").withParams(params).execute(context);
	}
}