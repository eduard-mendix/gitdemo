// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package iot.proxies;

public class Service
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject serviceMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "IoT.Service";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		UUID("UUID"),
		Name("Name"),
		Service_Profile("IoT.Service_Profile"),
		Service_Services("IoT.Service_Services"),
		Characteristics_Service("IoT.Characteristics_Service");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Service(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "IoT.Service"));
	}

	protected Service(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject serviceMendixObject)
	{
		if (serviceMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("IoT.Service", serviceMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a IoT.Service");

		this.serviceMendixObject = serviceMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Service.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static iot.proxies.Service initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return iot.proxies.Service.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static iot.proxies.Service initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new iot.proxies.Service(context, mendixObject);
	}

	public static iot.proxies.Service load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return iot.proxies.Service.initialize(context, mendixObject);
	}

	public static java.util.List<iot.proxies.Service> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<iot.proxies.Service> result = new java.util.ArrayList<iot.proxies.Service>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//IoT.Service" + xpathConstraint))
			result.add(iot.proxies.Service.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of UUID
	 */
	public final java.lang.String getUUID()
	{
		return getUUID(getContext());
	}

	/**
	 * @param context
	 * @return value of UUID
	 */
	public final java.lang.String getUUID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.UUID.toString());
	}

	/**
	 * Set value of UUID
	 * @param uuid
	 */
	public final void setUUID(java.lang.String uuid)
	{
		setUUID(getContext(), uuid);
	}

	/**
	 * Set value of UUID
	 * @param context
	 * @param uuid
	 */
	public final void setUUID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String uuid)
	{
		getMendixObject().setValue(context, MemberNames.UUID.toString(), uuid);
	}

	/**
	 * @return value of Name
	 */
	public final java.lang.String getName()
	{
		return getName(getContext());
	}

	/**
	 * @param context
	 * @return value of Name
	 */
	public final java.lang.String getName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Name.toString());
	}

	/**
	 * Set value of Name
	 * @param name
	 */
	public final void setName(java.lang.String name)
	{
		setName(getContext(), name);
	}

	/**
	 * Set value of Name
	 * @param context
	 * @param name
	 */
	public final void setName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String name)
	{
		getMendixObject().setValue(context, MemberNames.Name.toString(), name);
	}

	/**
	 * @return value of Service_Profile
	 */
	public final iot.proxies.Profile getService_Profile() throws com.mendix.core.CoreException
	{
		return getService_Profile(getContext());
	}

	/**
	 * @param context
	 * @return value of Service_Profile
	 */
	public final iot.proxies.Profile getService_Profile(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		iot.proxies.Profile result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Service_Profile.toString());
		if (identifier != null)
			result = iot.proxies.Profile.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Service_Profile
	 * @param service_profile
	 */
	public final void setService_Profile(iot.proxies.Profile service_profile)
	{
		setService_Profile(getContext(), service_profile);
	}

	/**
	 * Set value of Service_Profile
	 * @param context
	 * @param service_profile
	 */
	public final void setService_Profile(com.mendix.systemwideinterfaces.core.IContext context, iot.proxies.Profile service_profile)
	{
		if (service_profile == null)
			getMendixObject().setValue(context, MemberNames.Service_Profile.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Service_Profile.toString(), service_profile.getMendixObject().getId());
	}

	/**
	 * @return value of Service_Services
	 */
	public final iot.proxies.Services getService_Services() throws com.mendix.core.CoreException
	{
		return getService_Services(getContext());
	}

	/**
	 * @param context
	 * @return value of Service_Services
	 */
	public final iot.proxies.Services getService_Services(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		iot.proxies.Services result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Service_Services.toString());
		if (identifier != null)
			result = iot.proxies.Services.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Service_Services
	 * @param service_services
	 */
	public final void setService_Services(iot.proxies.Services service_services)
	{
		setService_Services(getContext(), service_services);
	}

	/**
	 * Set value of Service_Services
	 * @param context
	 * @param service_services
	 */
	public final void setService_Services(com.mendix.systemwideinterfaces.core.IContext context, iot.proxies.Services service_services)
	{
		if (service_services == null)
			getMendixObject().setValue(context, MemberNames.Service_Services.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Service_Services.toString(), service_services.getMendixObject().getId());
	}

	/**
	 * @return value of Characteristics_Service
	 */
	public final iot.proxies.Characteristics getCharacteristics_Service() throws com.mendix.core.CoreException
	{
		return getCharacteristics_Service(getContext());
	}

	/**
	 * @param context
	 * @return value of Characteristics_Service
	 */
	public final iot.proxies.Characteristics getCharacteristics_Service(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		iot.proxies.Characteristics result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Characteristics_Service.toString());
		if (identifier != null)
			result = iot.proxies.Characteristics.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Characteristics_Service
	 * @param characteristics_service
	 */
	public final void setCharacteristics_Service(iot.proxies.Characteristics characteristics_service)
	{
		setCharacteristics_Service(getContext(), characteristics_service);
	}

	/**
	 * Set value of Characteristics_Service
	 * @param context
	 * @param characteristics_service
	 */
	public final void setCharacteristics_Service(com.mendix.systemwideinterfaces.core.IContext context, iot.proxies.Characteristics characteristics_service)
	{
		if (characteristics_service == null)
			getMendixObject().setValue(context, MemberNames.Characteristics_Service.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Characteristics_Service.toString(), characteristics_service.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return serviceMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final iot.proxies.Service that = (iot.proxies.Service) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "IoT.Service";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
