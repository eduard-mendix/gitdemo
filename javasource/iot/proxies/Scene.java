// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package iot.proxies;

public class Scene
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject sceneMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "IoT.Scene";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		SceneName("SceneName"),
		Scene("Scene"),
		Active("Active"),
		Accessory_Scene("IoT.Accessory_Scene");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Scene(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "IoT.Scene"));
	}

	protected Scene(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject sceneMendixObject)
	{
		if (sceneMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("IoT.Scene", sceneMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a IoT.Scene");

		this.sceneMendixObject = sceneMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Scene.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static iot.proxies.Scene initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return iot.proxies.Scene.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static iot.proxies.Scene initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new iot.proxies.Scene(context, mendixObject);
	}

	public static iot.proxies.Scene load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return iot.proxies.Scene.initialize(context, mendixObject);
	}

	public static java.util.List<iot.proxies.Scene> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<iot.proxies.Scene> result = new java.util.ArrayList<iot.proxies.Scene>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//IoT.Scene" + xpathConstraint))
			result.add(iot.proxies.Scene.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of SceneName
	 */
	public final java.lang.String getSceneName()
	{
		return getSceneName(getContext());
	}

	/**
	 * @param context
	 * @return value of SceneName
	 */
	public final java.lang.String getSceneName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.SceneName.toString());
	}

	/**
	 * Set value of SceneName
	 * @param scenename
	 */
	public final void setSceneName(java.lang.String scenename)
	{
		setSceneName(getContext(), scenename);
	}

	/**
	 * Set value of SceneName
	 * @param context
	 * @param scenename
	 */
	public final void setSceneName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String scenename)
	{
		getMendixObject().setValue(context, MemberNames.SceneName.toString(), scenename);
	}

	/**
	 * Set value of Scene
	 * @param scene
	 */
	public final appmain.proxies.Scenes getScene()
	{
		return getScene(getContext());
	}

	/**
	 * @param context
	 * @return value of Scene
	 */
	public final appmain.proxies.Scenes getScene(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.Scene.toString());
		if (obj == null)
			return null;

		return appmain.proxies.Scenes.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of Scene
	 * @param scene
	 */
	public final void setScene(appmain.proxies.Scenes scene)
	{
		setScene(getContext(), scene);
	}

	/**
	 * Set value of Scene
	 * @param context
	 * @param scene
	 */
	public final void setScene(com.mendix.systemwideinterfaces.core.IContext context, appmain.proxies.Scenes scene)
	{
		if (scene != null)
			getMendixObject().setValue(context, MemberNames.Scene.toString(), scene.toString());
		else
			getMendixObject().setValue(context, MemberNames.Scene.toString(), null);
	}

	/**
	 * @return value of Active
	 */
	public final java.lang.Boolean getActive()
	{
		return getActive(getContext());
	}

	/**
	 * @param context
	 * @return value of Active
	 */
	public final java.lang.Boolean getActive(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.Active.toString());
	}

	/**
	 * Set value of Active
	 * @param active
	 */
	public final void setActive(java.lang.Boolean active)
	{
		setActive(getContext(), active);
	}

	/**
	 * Set value of Active
	 * @param context
	 * @param active
	 */
	public final void setActive(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean active)
	{
		getMendixObject().setValue(context, MemberNames.Active.toString(), active);
	}

	/**
	 * @return value of Accessory_Scene
	 */
	public final java.util.List<iot.proxies.Accessory> getAccessory_Scene() throws com.mendix.core.CoreException
	{
		return getAccessory_Scene(getContext());
	}

	/**
	 * @param context
	 * @return value of Accessory_Scene
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<iot.proxies.Accessory> getAccessory_Scene(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<iot.proxies.Accessory> result = new java.util.ArrayList<iot.proxies.Accessory>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.Accessory_Scene.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(iot.proxies.Accessory.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of Accessory_Scene
	 * @param accessory_scene
	 */
	public final void setAccessory_Scene(java.util.List<iot.proxies.Accessory> accessory_scene)
	{
		setAccessory_Scene(getContext(), accessory_scene);
	}

	/**
	 * Set value of Accessory_Scene
	 * @param context
	 * @param accessory_scene
	 */
	public final void setAccessory_Scene(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<iot.proxies.Accessory> accessory_scene)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (iot.proxies.Accessory proxyObject : accessory_scene)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.Accessory_Scene.toString(), identifiers);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return sceneMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final iot.proxies.Scene that = (iot.proxies.Scene) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "IoT.Scene";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
