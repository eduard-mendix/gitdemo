// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package iot.proxies;

public class CharacteristicValue
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject characteristicValueMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "IoT.CharacteristicValue";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		DateTimeCreated("DateTimeCreated");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public CharacteristicValue(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "IoT.CharacteristicValue"));
	}

	protected CharacteristicValue(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject characteristicValueMendixObject)
	{
		if (characteristicValueMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("IoT.CharacteristicValue", characteristicValueMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a IoT.CharacteristicValue");

		this.characteristicValueMendixObject = characteristicValueMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'CharacteristicValue.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static iot.proxies.CharacteristicValue initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return iot.proxies.CharacteristicValue.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static iot.proxies.CharacteristicValue initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		if (com.mendix.core.Core.isSubClassOf("IoT.ColorCharacteristic", mendixObject.getType()))
			return iot.proxies.ColorCharacteristic.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("IoT.GasCharacteristic", mendixObject.getType()))
			return iot.proxies.GasCharacteristic.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("IoT.HumidityCharacteristic", mendixObject.getType()))
			return iot.proxies.HumidityCharacteristic.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("IoT.PressureCharacteristic", mendixObject.getType()))
			return iot.proxies.PressureCharacteristic.initialize(context, mendixObject);

		if (com.mendix.core.Core.isSubClassOf("IoT.TemperatureCharacteristic", mendixObject.getType()))
			return iot.proxies.TemperatureCharacteristic.initialize(context, mendixObject);

		return new iot.proxies.CharacteristicValue(context, mendixObject);
	}

	public static iot.proxies.CharacteristicValue load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return iot.proxies.CharacteristicValue.initialize(context, mendixObject);
	}

	public static java.util.List<? extends iot.proxies.CharacteristicValue> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<iot.proxies.CharacteristicValue> result = new java.util.ArrayList<iot.proxies.CharacteristicValue>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//IoT.CharacteristicValue" + xpathConstraint))
			result.add(iot.proxies.CharacteristicValue.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of DateTimeCreated
	 */
	public final java.util.Date getDateTimeCreated()
	{
		return getDateTimeCreated(getContext());
	}

	/**
	 * @param context
	 * @return value of DateTimeCreated
	 */
	public final java.util.Date getDateTimeCreated(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.DateTimeCreated.toString());
	}

	/**
	 * Set value of DateTimeCreated
	 * @param datetimecreated
	 */
	public final void setDateTimeCreated(java.util.Date datetimecreated)
	{
		setDateTimeCreated(getContext(), datetimecreated);
	}

	/**
	 * Set value of DateTimeCreated
	 * @param context
	 * @param datetimecreated
	 */
	public final void setDateTimeCreated(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date datetimecreated)
	{
		getMendixObject().setValue(context, MemberNames.DateTimeCreated.toString(), datetimecreated);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return characteristicValueMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final iot.proxies.CharacteristicValue that = (iot.proxies.CharacteristicValue) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "IoT.CharacteristicValue";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
