// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package sap_integration.proxies;

public class VH_ProductTypeCode extends sapodataconnector.proxies.OdataObject
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "SAP_Integration.VH_ProductTypeCode";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		TypeCode("TypeCode"),
		Shorttext("Shorttext"),
		meta_objectURI("meta_objectURI"),
		meta_etag("meta_etag"),
		OdataObject_ResultInfo("SAPODataConnector.OdataObject_ResultInfo");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public VH_ProductTypeCode(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "SAP_Integration.VH_ProductTypeCode"));
	}

	protected VH_ProductTypeCode(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject vH_ProductTypeCodeMendixObject)
	{
		super(context, vH_ProductTypeCodeMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("SAP_Integration.VH_ProductTypeCode", vH_ProductTypeCodeMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a SAP_Integration.VH_ProductTypeCode");
	}

	/**
	 * @deprecated Use 'VH_ProductTypeCode.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static sap_integration.proxies.VH_ProductTypeCode initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return sap_integration.proxies.VH_ProductTypeCode.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static sap_integration.proxies.VH_ProductTypeCode initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new sap_integration.proxies.VH_ProductTypeCode(context, mendixObject);
	}

	public static sap_integration.proxies.VH_ProductTypeCode load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return sap_integration.proxies.VH_ProductTypeCode.initialize(context, mendixObject);
	}

	/**
	 * @return value of TypeCode
	 */
	public final java.lang.String getTypeCode()
	{
		return getTypeCode(getContext());
	}

	/**
	 * @param context
	 * @return value of TypeCode
	 */
	public final java.lang.String getTypeCode(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.TypeCode.toString());
	}

	/**
	 * Set value of TypeCode
	 * @param typecode
	 */
	public final void setTypeCode(java.lang.String typecode)
	{
		setTypeCode(getContext(), typecode);
	}

	/**
	 * Set value of TypeCode
	 * @param context
	 * @param typecode
	 */
	public final void setTypeCode(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String typecode)
	{
		getMendixObject().setValue(context, MemberNames.TypeCode.toString(), typecode);
	}

	/**
	 * @return value of Shorttext
	 */
	public final java.lang.String getShorttext()
	{
		return getShorttext(getContext());
	}

	/**
	 * @param context
	 * @return value of Shorttext
	 */
	public final java.lang.String getShorttext(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Shorttext.toString());
	}

	/**
	 * Set value of Shorttext
	 * @param shorttext
	 */
	public final void setShorttext(java.lang.String shorttext)
	{
		setShorttext(getContext(), shorttext);
	}

	/**
	 * Set value of Shorttext
	 * @param context
	 * @param shorttext
	 */
	public final void setShorttext(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String shorttext)
	{
		getMendixObject().setValue(context, MemberNames.Shorttext.toString(), shorttext);
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final sap_integration.proxies.VH_ProductTypeCode that = (sap_integration.proxies.VH_ProductTypeCode) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "SAP_Integration.VH_ProductTypeCode";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Override
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
