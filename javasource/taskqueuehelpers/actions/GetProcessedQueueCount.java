// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package taskqueuehelpers.actions;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.connectionbus.data.IDataRow;
import com.mendix.systemwideinterfaces.connectionbus.data.IDataTable;
import com.mendix.systemwideinterfaces.connectionbus.requests.types.IOQLTextGetRequest;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import java.util.HashMap;
import java.util.List;
import java.util.stream.Collectors;

public class GetProcessedQueueCount extends CustomJavaAction<java.util.List<IMendixObject>>
{
	public GetProcessedQueueCount(IContext context)
	{
		super(context);
	}

	@java.lang.Override
	public java.util.List<IMendixObject> executeAction() throws Exception
	{
		// BEGIN USER CODE
		IContext ctx = getContext();

		HashMap<String, IMendixObject> map = new HashMap<>();

		List<IMendixObject> processedTasks = Core.retrieveXPathQuery(ctx, "//System.ProcessedQueueTask");

		for (IMendixObject task : processedTasks) {
			String qname = task.getValue(ctx, "QueueName");

			IMendixObject counts = map.computeIfAbsent(qname, key -> {
				IMendixObject newcounts = Core.instantiate(ctx, "TaskQueueHelpers.ProcessedQueueCount");
				newcounts.setValue(ctx, "QueueName", qname);
				return newcounts;
			});

			String status = task.getValue(ctx, "Status");
			String countAttr = status.equals("Completed") ? "CompletedCount" : "NonCompletedCount";
			Long count = counts.getValue(ctx, countAttr);
			counts.setValue(ctx, countAttr, count + 1);

			map.put(qname, counts);
		}

		return map.values().stream().collect(Collectors.toList());
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "GetProcessedQueueCount";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
