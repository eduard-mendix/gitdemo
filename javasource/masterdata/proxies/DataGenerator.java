// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package masterdata.proxies;

public class DataGenerator
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject dataGeneratorMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "MasterData.DataGenerator";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		NumberOfIterations("NumberOfIterations"),
		Date("Date"),
		StartDate("StartDate"),
		DataGenerator_Workflow("MasterData.DataGenerator_Workflow");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public DataGenerator(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "MasterData.DataGenerator"));
	}

	protected DataGenerator(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject dataGeneratorMendixObject)
	{
		if (dataGeneratorMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("MasterData.DataGenerator", dataGeneratorMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a MasterData.DataGenerator");

		this.dataGeneratorMendixObject = dataGeneratorMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'DataGenerator.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static masterdata.proxies.DataGenerator initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return masterdata.proxies.DataGenerator.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static masterdata.proxies.DataGenerator initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new masterdata.proxies.DataGenerator(context, mendixObject);
	}

	public static masterdata.proxies.DataGenerator load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return masterdata.proxies.DataGenerator.initialize(context, mendixObject);
	}

	public static java.util.List<masterdata.proxies.DataGenerator> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<masterdata.proxies.DataGenerator> result = new java.util.ArrayList<masterdata.proxies.DataGenerator>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//MasterData.DataGenerator" + xpathConstraint))
			result.add(masterdata.proxies.DataGenerator.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of NumberOfIterations
	 */
	public final java.lang.Integer getNumberOfIterations()
	{
		return getNumberOfIterations(getContext());
	}

	/**
	 * @param context
	 * @return value of NumberOfIterations
	 */
	public final java.lang.Integer getNumberOfIterations(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.NumberOfIterations.toString());
	}

	/**
	 * Set value of NumberOfIterations
	 * @param numberofiterations
	 */
	public final void setNumberOfIterations(java.lang.Integer numberofiterations)
	{
		setNumberOfIterations(getContext(), numberofiterations);
	}

	/**
	 * Set value of NumberOfIterations
	 * @param context
	 * @param numberofiterations
	 */
	public final void setNumberOfIterations(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer numberofiterations)
	{
		getMendixObject().setValue(context, MemberNames.NumberOfIterations.toString(), numberofiterations);
	}

	/**
	 * @return value of Date
	 */
	public final java.util.Date getDate()
	{
		return getDate(getContext());
	}

	/**
	 * @param context
	 * @return value of Date
	 */
	public final java.util.Date getDate(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.Date.toString());
	}

	/**
	 * Set value of Date
	 * @param date
	 */
	public final void setDate(java.util.Date date)
	{
		setDate(getContext(), date);
	}

	/**
	 * Set value of Date
	 * @param context
	 * @param date
	 */
	public final void setDate(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date date)
	{
		getMendixObject().setValue(context, MemberNames.Date.toString(), date);
	}

	/**
	 * @return value of StartDate
	 */
	public final java.util.Date getStartDate()
	{
		return getStartDate(getContext());
	}

	/**
	 * @param context
	 * @return value of StartDate
	 */
	public final java.util.Date getStartDate(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.StartDate.toString());
	}

	/**
	 * Set value of StartDate
	 * @param startdate
	 */
	public final void setStartDate(java.util.Date startdate)
	{
		setStartDate(getContext(), startdate);
	}

	/**
	 * Set value of StartDate
	 * @param context
	 * @param startdate
	 */
	public final void setStartDate(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date startdate)
	{
		getMendixObject().setValue(context, MemberNames.StartDate.toString(), startdate);
	}

	/**
	 * @return value of DataGenerator_Workflow
	 */
	public final system.proxies.WorkflowInstance getDataGenerator_Workflow() throws com.mendix.core.CoreException
	{
		return getDataGenerator_Workflow(getContext());
	}

	/**
	 * @param context
	 * @return value of DataGenerator_Workflow
	 */
	public final system.proxies.WorkflowInstance getDataGenerator_Workflow(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		system.proxies.WorkflowInstance result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.DataGenerator_Workflow.toString());
		if (identifier != null)
			result = system.proxies.WorkflowInstance.load(context, identifier);
		return result;
	}

	/**
	 * Set value of DataGenerator_Workflow
	 * @param datagenerator_workflow
	 */
	public final void setDataGenerator_Workflow(system.proxies.WorkflowInstance datagenerator_workflow)
	{
		setDataGenerator_Workflow(getContext(), datagenerator_workflow);
	}

	/**
	 * Set value of DataGenerator_Workflow
	 * @param context
	 * @param datagenerator_workflow
	 */
	public final void setDataGenerator_Workflow(com.mendix.systemwideinterfaces.core.IContext context, system.proxies.WorkflowInstance datagenerator_workflow)
	{
		if (datagenerator_workflow == null)
			getMendixObject().setValue(context, MemberNames.DataGenerator_Workflow.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.DataGenerator_Workflow.toString(), datagenerator_workflow.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return dataGeneratorMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final masterdata.proxies.DataGenerator that = (masterdata.proxies.DataGenerator) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "MasterData.DataGenerator";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
