// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package pushnotifications.proxies;

public class APNSSettings extends pushnotifications.proxies.MessagingServiceSettings
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "PushNotifications.APNSSettings";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Started("Started"),
		Stage("Stage"),
		AuthenticationType("AuthenticationType"),
		DefaultTopic("DefaultTopic"),
		Enabled("Enabled"),
		Name("Name"),
		DTAPMode("DTAPMode"),
		MessagingServiceType("MessagingServiceType"),
		APNSSettings_APNSCertificate("PushNotifications.APNSSettings_APNSCertificate"),
		APNSSettings_APNSToken("PushNotifications.APNSSettings_APNSToken"),
		AndroidMessagingService("PushNotifications.AndroidMessagingService"),
		iOSMessagingService("PushNotifications.iOSMessagingService");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public APNSSettings(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "PushNotifications.APNSSettings"));
	}

	protected APNSSettings(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject aPNSSettingsMendixObject)
	{
		super(context, aPNSSettingsMendixObject);
		if (!com.mendix.core.Core.isSubClassOf("PushNotifications.APNSSettings", aPNSSettingsMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a PushNotifications.APNSSettings");
	}

	/**
	 * @deprecated Use 'APNSSettings.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static pushnotifications.proxies.APNSSettings initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return pushnotifications.proxies.APNSSettings.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static pushnotifications.proxies.APNSSettings initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new pushnotifications.proxies.APNSSettings(context, mendixObject);
	}

	public static pushnotifications.proxies.APNSSettings load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return pushnotifications.proxies.APNSSettings.initialize(context, mendixObject);
	}

	public static java.util.List<pushnotifications.proxies.APNSSettings> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<pushnotifications.proxies.APNSSettings> result = new java.util.ArrayList<pushnotifications.proxies.APNSSettings>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//PushNotifications.APNSSettings" + xpathConstraint))
			result.add(pushnotifications.proxies.APNSSettings.initialize(context, obj));
		return result;
	}

	/**
	 * @return value of Started
	 */
	public final java.lang.Boolean getStarted()
	{
		return getStarted(getContext());
	}

	/**
	 * @param context
	 * @return value of Started
	 */
	public final java.lang.Boolean getStarted(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.Started.toString());
	}

	/**
	 * Set value of Started
	 * @param started
	 */
	public final void setStarted(java.lang.Boolean started)
	{
		setStarted(getContext(), started);
	}

	/**
	 * Set value of Started
	 * @param context
	 * @param started
	 */
	public final void setStarted(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean started)
	{
		getMendixObject().setValue(context, MemberNames.Started.toString(), started);
	}

	/**
	 * Set value of Stage
	 * @param stage
	 */
	public final pushnotifications.proxies.APNSStage getStage()
	{
		return getStage(getContext());
	}

	/**
	 * @param context
	 * @return value of Stage
	 */
	public final pushnotifications.proxies.APNSStage getStage(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.Stage.toString());
		if (obj == null)
			return null;

		return pushnotifications.proxies.APNSStage.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of Stage
	 * @param stage
	 */
	public final void setStage(pushnotifications.proxies.APNSStage stage)
	{
		setStage(getContext(), stage);
	}

	/**
	 * Set value of Stage
	 * @param context
	 * @param stage
	 */
	public final void setStage(com.mendix.systemwideinterfaces.core.IContext context, pushnotifications.proxies.APNSStage stage)
	{
		if (stage != null)
			getMendixObject().setValue(context, MemberNames.Stage.toString(), stage.toString());
		else
			getMendixObject().setValue(context, MemberNames.Stage.toString(), null);
	}

	/**
	 * Set value of AuthenticationType
	 * @param authenticationtype
	 */
	public final pushnotifications.proxies.APNSAuthenticationType getAuthenticationType()
	{
		return getAuthenticationType(getContext());
	}

	/**
	 * @param context
	 * @return value of AuthenticationType
	 */
	public final pushnotifications.proxies.APNSAuthenticationType getAuthenticationType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.AuthenticationType.toString());
		if (obj == null)
			return null;

		return pushnotifications.proxies.APNSAuthenticationType.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of AuthenticationType
	 * @param authenticationtype
	 */
	public final void setAuthenticationType(pushnotifications.proxies.APNSAuthenticationType authenticationtype)
	{
		setAuthenticationType(getContext(), authenticationtype);
	}

	/**
	 * Set value of AuthenticationType
	 * @param context
	 * @param authenticationtype
	 */
	public final void setAuthenticationType(com.mendix.systemwideinterfaces.core.IContext context, pushnotifications.proxies.APNSAuthenticationType authenticationtype)
	{
		if (authenticationtype != null)
			getMendixObject().setValue(context, MemberNames.AuthenticationType.toString(), authenticationtype.toString());
		else
			getMendixObject().setValue(context, MemberNames.AuthenticationType.toString(), null);
	}

	/**
	 * @return value of DefaultTopic
	 */
	public final java.lang.String getDefaultTopic()
	{
		return getDefaultTopic(getContext());
	}

	/**
	 * @param context
	 * @return value of DefaultTopic
	 */
	public final java.lang.String getDefaultTopic(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.DefaultTopic.toString());
	}

	/**
	 * Set value of DefaultTopic
	 * @param defaulttopic
	 */
	public final void setDefaultTopic(java.lang.String defaulttopic)
	{
		setDefaultTopic(getContext(), defaulttopic);
	}

	/**
	 * Set value of DefaultTopic
	 * @param context
	 * @param defaulttopic
	 */
	public final void setDefaultTopic(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String defaulttopic)
	{
		getMendixObject().setValue(context, MemberNames.DefaultTopic.toString(), defaulttopic);
	}

	/**
	 * @return value of APNSSettings_APNSCertificate
	 */
	public final pushnotifications.proxies.APNSCertificate getAPNSSettings_APNSCertificate() throws com.mendix.core.CoreException
	{
		return getAPNSSettings_APNSCertificate(getContext());
	}

	/**
	 * @param context
	 * @return value of APNSSettings_APNSCertificate
	 */
	public final pushnotifications.proxies.APNSCertificate getAPNSSettings_APNSCertificate(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		pushnotifications.proxies.APNSCertificate result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.APNSSettings_APNSCertificate.toString());
		if (identifier != null)
			result = pushnotifications.proxies.APNSCertificate.load(context, identifier);
		return result;
	}

	/**
	 * Set value of APNSSettings_APNSCertificate
	 * @param apnssettings_apnscertificate
	 */
	public final void setAPNSSettings_APNSCertificate(pushnotifications.proxies.APNSCertificate apnssettings_apnscertificate)
	{
		setAPNSSettings_APNSCertificate(getContext(), apnssettings_apnscertificate);
	}

	/**
	 * Set value of APNSSettings_APNSCertificate
	 * @param context
	 * @param apnssettings_apnscertificate
	 */
	public final void setAPNSSettings_APNSCertificate(com.mendix.systemwideinterfaces.core.IContext context, pushnotifications.proxies.APNSCertificate apnssettings_apnscertificate)
	{
		if (apnssettings_apnscertificate == null)
			getMendixObject().setValue(context, MemberNames.APNSSettings_APNSCertificate.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.APNSSettings_APNSCertificate.toString(), apnssettings_apnscertificate.getMendixObject().getId());
	}

	/**
	 * @return value of APNSSettings_APNSToken
	 */
	public final pushnotifications.proxies.APNSToken getAPNSSettings_APNSToken() throws com.mendix.core.CoreException
	{
		return getAPNSSettings_APNSToken(getContext());
	}

	/**
	 * @param context
	 * @return value of APNSSettings_APNSToken
	 */
	public final pushnotifications.proxies.APNSToken getAPNSSettings_APNSToken(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		pushnotifications.proxies.APNSToken result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.APNSSettings_APNSToken.toString());
		if (identifier != null)
			result = pushnotifications.proxies.APNSToken.load(context, identifier);
		return result;
	}

	/**
	 * Set value of APNSSettings_APNSToken
	 * @param apnssettings_apnstoken
	 */
	public final void setAPNSSettings_APNSToken(pushnotifications.proxies.APNSToken apnssettings_apnstoken)
	{
		setAPNSSettings_APNSToken(getContext(), apnssettings_apnstoken);
	}

	/**
	 * Set value of APNSSettings_APNSToken
	 * @param context
	 * @param apnssettings_apnstoken
	 */
	public final void setAPNSSettings_APNSToken(com.mendix.systemwideinterfaces.core.IContext context, pushnotifications.proxies.APNSToken apnssettings_apnstoken)
	{
		if (apnssettings_apnstoken == null)
			getMendixObject().setValue(context, MemberNames.APNSSettings_APNSToken.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.APNSSettings_APNSToken.toString(), apnssettings_apnstoken.getMendixObject().getId());
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final pushnotifications.proxies.APNSSettings that = (pushnotifications.proxies.APNSSettings) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "PushNotifications.APNSSettings";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Override
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
