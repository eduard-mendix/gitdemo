// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package homeautomationconnector.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the HomeAutomationConnector module
	public static boolean bCo_CalculateMiredValue(IContext context, homeautomationconnector.proxies.ColourTemperature _colourTemperature)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("ColourTemperature", _colourTemperature == null ? null : _colourTemperature.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("HomeAutomationConnector.BCo_CalculateMiredValue").withParams(params).execute(context);
	}
	public static void createTestAddress(IContext context, homeautomationconnector.proxies.Connector _connector)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Connector", _connector == null ? null : _connector.getMendixObject());
		Core.microflowCall("HomeAutomationConnector.CreateTestAddress").withParams(params).execute(context);
	}
	public static java.lang.String getAlertCaption(IContext context, homeautomationconnector.proxies.alert _alert)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("alert", _alert == null ? null : _alert.name());
		return (java.lang.String) Core.microflowCall("HomeAutomationConnector.GetAlertCaption").withParams(params).execute(context);
	}
	public static java.lang.Long getBrightnessPercentage(IContext context, java.lang.Long _bri)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("bri", _bri);
		return (java.lang.Long) Core.microflowCall("HomeAutomationConnector.GetBrightnessPercentage").withParams(params).execute(context);
	}
	public static homeautomationconnector.proxies.XY getColorXY(IContext context, homeautomationconnector.proxies.Color _color, homeautomationconnector.proxies.XY _xY)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Color", _color == null ? null : _color.name());
		params.put("XY", _xY == null ? null : _xY.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("HomeAutomationConnector.GetColorXY").withParams(params).execute(context);
		return result == null ? null : homeautomationconnector.proxies.XY.initialize(context, result);
	}
	public static java.lang.Long getColourMired(IContext context, homeautomationconnector.proxies.ColorTemperature _colorTemperature)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("ColorTemperature", _colorTemperature == null ? null : _colorTemperature.name());
		return (java.lang.Long) Core.microflowCall("HomeAutomationConnector.GetColourMired").withParams(params).execute(context);
	}
	public static homeautomationconnector.proxies.Connector getConnector(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("HomeAutomationConnector.GetConnector").withParams(params).execute(context);
		return result == null ? null : homeautomationconnector.proxies.Connector.initialize(context, result);
	}
	public static java.lang.String getEffectCaption(IContext context, homeautomationconnector.proxies.effect _effect)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("effect", _effect == null ? null : _effect.name());
		return (java.lang.String) Core.microflowCall("HomeAutomationConnector.GetEffectCaption").withParams(params).execute(context);
	}
	public static homeautomationconnector.proxies.StateRequestAll_CT getState(IContext context, java.lang.String _accessoryID)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("AccessoryID", _accessoryID);
		IMendixObject result = (IMendixObject)Core.microflowCall("HomeAutomationConnector.GetState").withParams(params).execute(context);
		return result == null ? null : homeautomationconnector.proxies.StateRequestAll_CT.initialize(context, result);
	}
	public static void importHueColors(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("HomeAutomationConnector.ImportHueColors").withParams(params).execute(context);
	}
	public static void importTemperatureColors(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("HomeAutomationConnector.ImportTemperatureColors").withParams(params).execute(context);
	}
	public static boolean setAlert(IContext context, java.lang.String _accessoryID, homeautomationconnector.proxies.alert _alert)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("AccessoryID", _accessoryID);
		params.put("Alert", _alert == null ? null : _alert.name());
		return (java.lang.Boolean) Core.microflowCall("HomeAutomationConnector.SetAlert").withParams(params).execute(context);
	}
	public static homeautomationconnector.proxies.alert setAlertCaption(IContext context, java.lang.String _alert)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("alert", _alert);
		java.lang.String result = (java.lang.String) Core.microflowCall("HomeAutomationConnector.SetAlertCaption").withParams(params).execute(context);
		return result == null ? null : homeautomationconnector.proxies.alert.valueOf(result);
	}
	public static boolean setAllColorModeCT(IContext context, java.lang.String _accessoryID, homeautomationconnector.proxies.alert _alert, java.lang.Long _brightness, boolean _on, homeautomationconnector.proxies.ColorTemperature _colorTemperature)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("AccessoryID", _accessoryID);
		params.put("Alert", _alert == null ? null : _alert.name());
		params.put("Brightness", _brightness);
		params.put("On", _on);
		params.put("ColorTemperature", _colorTemperature == null ? null : _colorTemperature.name());
		return (java.lang.Boolean) Core.microflowCall("HomeAutomationConnector.SetAllColorModeCT").withParams(params).execute(context);
	}
	public static boolean setAllColorModeCTWithMired(IContext context, java.lang.String _accessoryID, homeautomationconnector.proxies.alert _alert, java.lang.Long _brightness, boolean _on, java.lang.Long _colorTemperature)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("AccessoryID", _accessoryID);
		params.put("Alert", _alert == null ? null : _alert.name());
		params.put("Brightness", _brightness);
		params.put("On", _on);
		params.put("ColorTemperature", _colorTemperature);
		return (java.lang.Boolean) Core.microflowCall("HomeAutomationConnector.SetAllColorModeCTWithMired").withParams(params).execute(context);
	}
	public static boolean setAllColorModeHS(IContext context, java.lang.String _accessoryID, homeautomationconnector.proxies.alert _alert, java.lang.Long _brightness, boolean _on, java.lang.Long _hue, java.lang.Long _sat)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("AccessoryID", _accessoryID);
		params.put("Alert", _alert == null ? null : _alert.name());
		params.put("Brightness", _brightness);
		params.put("On", _on);
		params.put("Hue", _hue);
		params.put("Sat", _sat);
		return (java.lang.Boolean) Core.microflowCall("HomeAutomationConnector.SetAllColorModeHS").withParams(params).execute(context);
	}
	public static boolean setAllColorModeXY(IContext context, java.lang.String _accessoryID, homeautomationconnector.proxies.alert _alert, java.lang.Long _brightness, boolean _on, homeautomationconnector.proxies.Color _color)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("AccessoryID", _accessoryID);
		params.put("Alert", _alert == null ? null : _alert.name());
		params.put("Brightness", _brightness);
		params.put("On", _on);
		params.put("Color", _color == null ? null : _color.name());
		return (java.lang.Boolean) Core.microflowCall("HomeAutomationConnector.SetAllColorModeXY").withParams(params).execute(context);
	}
	public static boolean setAllColorModeXYwithXandY(IContext context, java.lang.String _accessoryID, homeautomationconnector.proxies.alert _alert, java.lang.Long _brightness, boolean _on, java.math.BigDecimal _x, java.math.BigDecimal _y)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("AccessoryID", _accessoryID);
		params.put("Alert", _alert == null ? null : _alert.name());
		params.put("Brightness", _brightness);
		params.put("On", _on);
		params.put("X", _x);
		params.put("Y", _y);
		return (java.lang.Boolean) Core.microflowCall("HomeAutomationConnector.SetAllColorModeXYwithXandY").withParams(params).execute(context);
	}
	public static boolean setBrightness(IContext context, java.lang.String _accessoryID, java.lang.Long _brightness)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("AccessoryID", _accessoryID);
		params.put("Brightness", _brightness);
		return (java.lang.Boolean) Core.microflowCall("HomeAutomationConnector.SetBrightness").withParams(params).execute(context);
	}
	public static java.lang.Long setBrightnessPercentage(IContext context, java.lang.Long _bri)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("bri", _bri);
		return (java.lang.Long) Core.microflowCall("HomeAutomationConnector.SetBrightnessPercentage").withParams(params).execute(context);
	}
	public static boolean setColor(IContext context, java.lang.String _accessoryID, homeautomationconnector.proxies.Color _color)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("AccessoryID", _accessoryID);
		params.put("Color", _color == null ? null : _color.name());
		return (java.lang.Boolean) Core.microflowCall("HomeAutomationConnector.SetColor").withParams(params).execute(context);
	}
	public static boolean setColorHS(IContext context, java.lang.String _accessoryID, java.lang.Long _hue, java.lang.Long _sat)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("AccessoryID", _accessoryID);
		params.put("Hue", _hue);
		params.put("Sat", _sat);
		return (java.lang.Boolean) Core.microflowCall("HomeAutomationConnector.SetColorHS").withParams(params).execute(context);
	}
	public static boolean setColorTemperature(IContext context, java.lang.String _accessoryID, homeautomationconnector.proxies.ColorTemperature _colorTemperature)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("AccessoryID", _accessoryID);
		params.put("ColorTemperature", _colorTemperature == null ? null : _colorTemperature.name());
		return (java.lang.Boolean) Core.microflowCall("HomeAutomationConnector.SetColorTemperature").withParams(params).execute(context);
	}
	public static boolean setColorTemperatureWithMired(IContext context, java.lang.String _accessoryID, java.lang.Long _mired)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("AccessoryID", _accessoryID);
		params.put("Mired", _mired);
		return (java.lang.Boolean) Core.microflowCall("HomeAutomationConnector.SetColorTemperatureWithMired").withParams(params).execute(context);
	}
	public static boolean setColorXY(IContext context, java.lang.String _accessoryID, java.math.BigDecimal _x, java.math.BigDecimal _y)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("AccessoryID", _accessoryID);
		params.put("X", _x);
		params.put("Y", _y);
		return (java.lang.Boolean) Core.microflowCall("HomeAutomationConnector.SetColorXY").withParams(params).execute(context);
	}
	public static homeautomationconnector.proxies.effect setEffectCaption(IContext context, java.lang.String _effect)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("effect", _effect);
		java.lang.String result = (java.lang.String) Core.microflowCall("HomeAutomationConnector.SetEffectCaption").withParams(params).execute(context);
		return result == null ? null : homeautomationconnector.proxies.effect.valueOf(result);
	}
	public static boolean setOnOff(IContext context, java.lang.String _accessoryID, boolean _on)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("AccessoryID", _accessoryID);
		params.put("On", _on);
		return (java.lang.Boolean) Core.microflowCall("HomeAutomationConnector.SetOnOff").withParams(params).execute(context);
	}
	public static boolean turnOff(IContext context, java.lang.String _accessoryID)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("AccessoryID", _accessoryID);
		return (java.lang.Boolean) Core.microflowCall("HomeAutomationConnector.TurnOff").withParams(params).execute(context);
	}
	public static boolean turnOn(IContext context, java.lang.String _accessoryID)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("AccessoryID", _accessoryID);
		return (java.lang.Boolean) Core.microflowCall("HomeAutomationConnector.TurnOn").withParams(params).execute(context);
	}
}